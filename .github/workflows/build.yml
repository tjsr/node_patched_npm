name: Release
run-name: ${{ github.actor }} Building and pushing node_patched_npm
on: [push]
env:
  NODE_VERSION: '20.15.1'
  ALPINE_VERSION: '3.20'
  NPM_VERSION: '10.8.2'
  LATEST_IMAGE_TAG: '20.15.1-alpine3.20-npm10.8.2'
jobs:
  node_matrix:
    strategy:
      matrix:
        node_version: ['18.20.3', '20.13.1', '20.14.0', '20.15.1']
        alpine_version: ['3.20']
        npm_version: ['10.7.0', '10.8.2']
    runs-on: ubuntu-latest
    # variables:
    #   IMG_MATRIX_VER=${{ matrix.node_version }}-alpine${{ matrix.alpine_version }}-npm${{ matrix.npm_version }}
    steps:
      - id: matrix-image
        env:
          MATRIX_VERSION: "${{ matrix.node_version }}-alpine${{ matrix.alpine_version }}-npm${{ matrix.npm_version }}"

        run: |
          IS_LATEST=$([[ "$LATEST_IMAGE_TAG" == "$MATRIX_VERSION" ]] && echo true || echo false)
          echo "tag=${{ env.MATRIX_VERSION }}" >> "$GITHUB_OUTPUT"
          echo "isLatest=$IS_LATEST" >> "$GITHUB_OUTPUT"

      - uses: actions/checkout@v4

      - name: Get branch names.
        id: branch-names
        uses: tj-actions/branch-names@v8

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push all docker images.
        uses: docker/build-push-action@v6
        with:
          context: .
          push: ${{ github.ref == 'refs/heads/main' || steps.matrix-image.outputs.isLatest == 'true' }}
          platforms: linux/amd64,linux/arm64
          build-args: |
            NODE_VERSION=${{ matrix.node_version }}
            ALPINE_VERSION=${{ matrix.alpine_version }}
            NPM_VERSION=${{ matrix.npm_version }}
          tags: ghcr.io/tjsr/node_patched_npm:${{ steps.matrix-image.outputs.tag }}
          outputs: |
            type=oci,dest=/tmp/${{ steps.matrix-image.outputs.tag }}.tar
            type=registry,ref=ghcr.io/tjsr/node_patched_npm:${{ steps.matrix-image.outputs.tag }}

      - name: Upload OCI multi-platform image
        if: github.ref == 'refs/heads/main' && ${{ steps.matrix-image.outputs.isLatest }}
        uses: actions/upload-artifact@v4
        with:
          name: node_patched_npm_${{ steps.matrix-image.outputs.tag }}
          path: /tmp/${{ steps.matrix-image.outputs.tag }}.tar

  latest:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    needs: node_matrix
    steps:
      - name: Get branch names.
        id: branch-names
        uses: tj-actions/branch-names@v8

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
            
      - name: Download OCI multi-platform artifact
        uses: actions/download-artifact@v4
        with:
          name: node_patched_npm_${{ env.LATEST_IMAGE_TAG }}
          path: /tmp/node_patched_npm

      - name: Load tagged OCI multi-platform image.
        id: load-oci
        run: |
          docker import /tmp/node_patched_npm/${{ env.LATEST_IMAGE_TAG }}.tar ghcr.io/tjsr/node_patched_npm:${{ env.LATEST_IMAGE_TAG }}

      - name: Tag the latest image with all the variants we want
        run: |
          BASECMD="docker tag ghcr.io/tjsr/node_patched_npm:${{ env.LATEST_IMAGE_TAG }}"
          docker tag ghcr.io/tjsr/node_patched_npm:${{ env.LATEST_IMAGE_TAG }} ghcr.io/tjsr/node_patched_npm
          docker tag ghcr.io/tjsr/node_patched_npm:${{ env.LATEST_IMAGE_TAG }} ghcr.io/tjsr/node_patched_npm:latest
          docker tag ghcr.io/tjsr/node_patched_npm:${{ env.LATEST_IMAGE_TAG }} ghcr.io/tjsr/node_patched_npm:latest-alpine${{ env.ALPINE_VERSION }}-npm${{ env.NPM_VERSION }}
          docker tag ghcr.io/tjsr/node_patched_npm:${{ env.LATEST_IMAGE_TAG }} ghcr.io/tjsr/node_patched_npm:latest-alpine-latest-npm${{ env.NPM_VERSION }}
          docker tag ghcr.io/tjsr/node_patched_npm:${{ env.LATEST_IMAGE_TAG }} ghcr.io/tjsr/node_patched_npm:latest-npm${{ env.NPM_VERSION }}
          docker tag ghcr.io/tjsr/node_patched_npm:${{ env.LATEST_IMAGE_TAG }} ghcr.io/tjsr/node_patched_npm:latest-alpine-${{ env.ALPINE_VERSION }}-npm-latest
          docker tag ghcr.io/tjsr/node_patched_npm:${{ env.LATEST_IMAGE_TAG }} ghcr.io/tjsr/node_patched_npm:latest-alpine-${{ env.ALPINE_VERSION }}
          docker tag ghcr.io/tjsr/node_patched_npm:${{ env.LATEST_IMAGE_TAG }} ghcr.io/tjsr/node_patched_npm:${{ env.NODE_VERSION }}-alpine-latest-npm${{ env.NPM_VERSION }}
          docker tag ghcr.io/tjsr/node_patched_npm:${{ env.LATEST_IMAGE_TAG }} ghcr.io/tjsr/node_patched_npm:${{ env.NODE_VERSION }}-npm${{ env.NPM_VERSION }}-latest
          docker tag ghcr.io/tjsr/node_patched_npm:${{ env.LATEST_IMAGE_TAG }} ghcr.io/tjsr/node_patched_npm:${{ env.NODE_VERSION }}-npm${{ env.NPM_VERSION }}
          docker tag ghcr.io/tjsr/node_patched_npm:${{ env.LATEST_IMAGE_TAG }} ghcr.io/tjsr/node_patched_npm:${{ env.NODE_VERSION }}-alpine${{ env.ALPINE_VERSION }}-npm-latest
          docker tag ghcr.io/tjsr/node_patched_npm:${{ env.LATEST_IMAGE_TAG }} ghcr.io/tjsr/node_patched_npm:${{ env.NODE_VERSION }}-alpine${{ env.ALPINE_VERSION }}
          docker tag ghcr.io/tjsr/node_patched_npm:${{ env.LATEST_IMAGE_TAG }} ghcr.io/tjsr/node_patched_npm:${{ env.NODE_VERSION }}-alpine-latest-npm-latest
          docker tag ghcr.io/tjsr/node_patched_npm:${{ env.LATEST_IMAGE_TAG }} ghcr.io/tjsr/node_patched_npm:${{ env.NODE_VERSION }}-latest
          docker tag ghcr.io/tjsr/node_patched_npm:${{ env.LATEST_IMAGE_TAG }} ghcr.io/tjsr/node_patched_npm:${{ env.NODE_VERSION }}

      - name: Push tagged images
        run:
          docker push --all-tags ghcr.io/tjsr/node_patched_npm


name: Release
run-name: ${{ github.actor }} Building and pushing node_patched_npm
on: [push, workflow_dispatch]
env:
  NODE_VERSION: '22.16.0'
  ALPINE_VERSION: '3.22'
  NPM_VERSION: '11.4.1'
  LATEST_TAG: '22.16.0-alpine3.22-npm11.4.1'
  LATEST_IMAGE_TAG: 'node_patched_npm:2.16.0-alpine3.22-npm11.4.1'
jobs:
  node_matrix:
    strategy:
      matrix:
        node:
          - version: '20.19.3'
          - version: '20.19.1'
          - version: '22.5.0'
          - version: '22.16.0'
          - version: '24.2.0'
        alpine:
          - version: '3.19'
          - version: '3.20'
          - version: '3.21'
          - version: '3.22'
        npm:
          - version: '11.4.1'
          - version: '11.4.0'
        exclude:
          - node: '24.2.0'
            alpine: ['3.20', '3.19']
          - node: '22.16.0'
            alpine: ['3.19']
          - node: ['20.19.3', '20.19.1']
            alpine: '3.22'
          - node: '22.5.0'
            alpine: ['3.21', '3.22']

    runs-on: ubuntu-latest
    steps:
      - id: matrix-image
        env:
          MATRIX_VERSION: "${{ matrix.node.version }}-alpine${{ matrix.alpine.version }}-npm${{ matrix.npm.version }}"
          IS_LATEST_NODE: "${{ matrix.node.version == env.NODE_VERSION }}"
          IS_LATEST_NPM: "${{ matrix.npm.version == env.NPM_VERSION }}"
          IS_LATEST_ALPINE: "${{ matrix.alpine.version == env.ALPINE_VERSION }}"
        run: |
          IS_LATEST=$([[ "$LATEST_TAG" == "$MATRIX_VERSION" ]] && echo true || echo false)
          TMP_FILE=/tmp/values.${GITHUB_RUN_ID}.txt
          echo "isLatest=$IS_LATEST" >> "$TMP_FILE"
          echo "isLatestNode=$IS_LATEST_NODE" >> "$TMP_FILE"
          echo "isLatestAlpine=$IS_LATEST_ALPINE" >> "$TMP_FILE"
          echo "isLatestNpm=$IS_LATEST_NPM" >> "$TMP_FILE"

          cat $TMP_FILE
          cat $TMP_FILE >> "$GITHUB_OUTPUT"

      - uses: actions/checkout@v4

      - name: Get branch names.
        id: branch-names
        uses: tj-actions/branch-names@v8

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Confirming that image will be pushed.
        id: push-image
        if: ${{ github.ref == 'refs/head/main' || github.event_name == 'workflow_dispatch' || vars.PUSH_BRANCH == steps.branch-names.outputs.current_branch }}
        run: |
          echo "Pushing image."
          echo "Fired by workflow: ${{ github.event_name == 'workflow_dispatch' }}"
          echo "isPushBranch=${{ vars.PUSH_BRANCH == steps.branch-names.outputs.current_branch }}" >> "$GITHUB_OUTPUT"
          echo "push=true" >> "$GITHUB_OUTPUT"

      - name: Latest tags meta
        id: image-meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/tjsr/node_patched_npm
          tags: |
            type=raw,value=${{ matrix.node.version }}-alpine${{ matrix.alpine.version }}-npm${{ matrix.npm.version }}
            type=raw,enable=${{ steps.push-image.outputs.push == 'true' && steps.matrix-image.outputs.isLatestNode == 'true' && steps.matrix-image.outputs.isLatestAlpine == 'true' && steps.matrix-image.outputs.isLatestNpm == 'true' }},value=latest
            type=raw,enable=${{ steps.push-image.outputs.push == 'true' && steps.matrix-image.outputs.isLatestNode == 'true' }},value=alpine${{ matrix.alpine.version }}-npm${{ matrix.npm.version }}
            type=raw,enable=${{ steps.push-image.outputs.push == 'true' && steps.matrix-image.outputs.isLatestNode == 'true' && steps.matrix-image.outputs.isLatestAlpine == 'true' }},value=npm${{ matrix.npm.version }}
            type=raw,enable=${{ steps.push-image.outputs.push == 'true' && steps.matrix-image.outputs.isLatestNode == 'true' && steps.matrix-image.outputs.isLatestNpm == 'true' }},value=alpine-${{ matrix.alpine.version }}
            type=raw,enable=${{ steps.push-image.outputs.push == 'true' && steps.matrix-image.outputs.isLatestAlpine == 'true' }},value=${{ matrix.node.version }}-npm${{ matrix.npm.version }}
            type=raw,enable=${{ steps.push-image.outputs.push == 'true' && steps.matrix-image.outputs.isLatestNpm == 'true' }},value=${{ matrix.node.version }}-alpine${{ matrix.alpine.version }}
            type=sha
            type=sha,format=long

      - name: Build and push all docker images.
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          platforms: linux/amd64,linux/arm64
          build-args: |
            NODE_VERSION=${{ matrix.node.version }}
            ALPINE_VERSION=${{ matrix.alpine.version }}
            NPM_VERSION=${{ matrix.npm.version }}
          tags: ${{ steps.image-meta.outputs.tags }}
